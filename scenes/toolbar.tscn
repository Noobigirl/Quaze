[gd_scene load_steps=9 format=3 uid="uid://douxho5akulkb"]

[ext_resource type="PackedScene" uid="uid://cmg4ro7yvgr5m" path="res://scenes/ToolbarSlot.tscn" id="1_i3mxx"]
[ext_resource type="PackedScene" uid="uid://dpfhcyr6a20to" path="res://scenes/Gate.tscn" id="2_wdy5x"]
[ext_resource type="Script" uid="uid://cvpu4a83jlv3l" path="res://scripts/toolbar_animation.gd" id="3_0lhma"]

[sub_resource type="GDScript" id="GDScript_sarqt"]
resource_name = "toobar_UI"
script/source = "extends Control

signal gate_created
@export var slot : PackedScene
@export var gate: PackedScene
var hidded: bool = false
var _slots
var showing_signal: Signal

# - maket the toolbar more dynamic
func _ready() -> void:
	$BarAnimation.to_animate = self 
	Toolbar.slot_pressed.connect(add_gate)
	Toolbar.play_animation.connect(play_animation)
	#gate_created.connect($BarAnimation.animate_hidding) # playing the hidding animation when slot pressed
	#showing_signal.connect($BarAnimation.animate_emerging) # playing the showing animation when area entered
	
	for i in Toolbar.slot_logic.size():
		var new_slot = slot.instantiate() # creating a slot for each gate
		new_slot.slot_logic = Toolbar.slot_logic[i] # assigning the default logic of the slot
		new_slot.set_texture(Toolbar.gates[new_slot.slot_logic]) # setting the icon texture displayed by the slot
		new_slot.slot_index = i
		$GridContainer.add_child(new_slot) # adding the slot to the toolbar
	_slots = $GridContainer.get_children() # getting the slots when they are all added
# will be later accessed through indexes
	
func add_gate(gate_logic: String): # executed when a slot is pressed
	# --- instancing the correct gate
	var new_gate = gate.instantiate()
	var logic = gate_logic
	var texture = Toolbar.gates[gate_logic]
	new_gate.set_gate(logic, texture)
	
	get_tree().call_group(\"slot\", \"toggle_collision\") # toggling off the collision of shape of the slots
	# because the gates are instance at the position of the slots, and we don't want them to be detected yet
	new_gate.global_position = _slots[Toolbar.current_slot].gate_position # setting the gate position to the posiion of the slot that instanced it
	get_parent().add_child(new_gate) # parent must be main scene
	gate_created.emit()
	Toolbar.play_animation.emit(\"hiding\")

func play_animation(animation: String):
	if animation == \"hiding\":
		# add a timer before hiding
		if hidded:
			return # we don't want to play the hidding animation if the toolbar is already hidden
		hidded = true
	else:
		if !hidded:
			return  # we don't want to play the showing animation if the gate is not hidden
		hidded = false
			
	$AnimationPlayer.play(animation)
"

[sub_resource type="Animation" id="Animation_u1tii"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(168, 464), Vector2(168, 464), Vector2(168, 464), Vector2(168, 464), Vector2(168, 464), Vector2(168, 464)]
}

[sub_resource type="Animation" id="Animation_0lhma"]
resource_name = "hiding"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(360, 464), Vector2(360, 484), Vector2(360, 504), Vector2(360, 524), Vector2(360, 544), Vector2(360, 584)]
}

[sub_resource type="Animation" id="Animation_ls1wr"]
resource_name = "showing"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(360, 584), Vector2(360, 544), Vector2(360, 524), Vector2(360, 504), Vector2(360, 484), Vector2(360, 464)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_u1tii"]
_data = {
&"RESET": SubResource("Animation_u1tii"),
&"hiding": SubResource("Animation_0lhma"),
&"showing": SubResource("Animation_ls1wr")
}

[node name="Toolbar" type="Control"]
layout_mode = 3
anchor_left = 0.233
anchor_top = 0.875
anchor_right = 0.833
anchor_bottom = 0.996
offset_left = 192.24
offset_top = 0.25
offset_right = 192.24
offset_bottom = 2.12
grow_horizontal = 2
grow_vertical = 0
script = SubResource("GDScript_sarqt")
slot = ExtResource("1_i3mxx")
gate = ExtResource("2_wdy5x")
metadata/_edit_group_ = true

[node name="TestingAnimation" type="ColorRect" parent="."]
visible = false
layout_mode = 0
offset_right = 471.0
offset_bottom = 40.0

[node name="BarAnimation" type="Node" parent="."]
script = ExtResource("3_0lhma")
transition_type = 6
value = Vector2(0, 105)
duration = 0.3
metadata/_custom_type_script = "uid://cvpu4a83jlv3l"

[node name="GridContainer" type="HBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 50
alignment = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_u1tii")
}
speed_scale = 1.5
